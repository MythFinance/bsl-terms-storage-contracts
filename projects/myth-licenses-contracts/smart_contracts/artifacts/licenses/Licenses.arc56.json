{
    "name": "Licenses",
    "structs": {},
    "methods": [
        {
            "name": "add_product",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "change_date"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_use_grants",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "offset"
                },
                {
                    "type": "string",
                    "name": "payload"
                },
                {
                    "type": "bool",
                    "name": "final_chunk"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_change_date",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "next_change_date"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_global",
            "args": [
                {
                    "type": "byte[]",
                    "name": "key"
                },
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_admin",
            "args": [
                {
                    "type": "account",
                    "name": "new_admin"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 54,
                "bytes": 10
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "admin": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRtaW4="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "licenses": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "prefix": ""
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        434,
                        452,
                        476,
                        498,
                        531
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        558
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        437,
                        455,
                        479,
                        501,
                        534
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        817
                    ],
                    "errorMessage": "check self.admin exists"
                },
                {
                    "pc": [
                        644,
                        670
                    ],
                    "errorMessage": "check self.licenses entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmBQEiBWFkbWluFyIgYWRkaXRpb25hbCB1c2UgZ3JhbnRzDSIgY2hhbmdlIGRhdGUKRVJSOk5FWElTVDEYQAE5KTEAZ4ICCSBSRUFETUUgMWJDb250cmFjdCBob2xkaW5nIGFkZGl0aW9uYWwgdXNlIGdyYW50cyBhbmQgY2hhbmdlIGRhdGVzIGZvciBCU0wgbGljZW5zZWQgcHJvZHVjdHMgYnkgTXl0aCBGaW5hbmNlLmeCAgkgUkVBRE1FIDJWU3RvcmFnZSBrZXlzIGFyZSBwcmVmaXhlZCB3aXRoIHRoZSBwcm9kdWN0IG5hbWUuIFVzZSBncmFudHMgYXJlIHN0b3JlZCBpbiBib3ggc3RvcmFnZS5nggIJIFJFQURNRSAzU0NoYW5nZSBkYXRlcyBhcmUgc3RvcmVkIGluIGdsb2JhbCBzdG9yYWdlIGFzIHNlY29uZHMgc2luY2UgMTk3MC0wMS0wMSAwMDowMDowMCBVVEMuZzEbQQCjggUEiLyaewQWLj55BFHa2i0EQRUdqAS7o9qLNhoAjgUAYwBCACwAFAACI0MxGRREMRhENhoBF8AciAFiIkMxGRREMRhENhoBVwIANhoCVwIAiAEQIkMxGRREMRhENhoBVwIANhoCF4gAviJDMRkURDEYRDYaAVcCADYaAhc2GgNXAgA2GgQjU4gAVCJDMRkURDEYRDYaAVcCADYaAheIAA0iQzEZQP+CMRgURCJDigIAiAD1KIv+UEkqUEm9RQFBAA2ACUVSUjpFWElTVLAAiwArUIv/Z4sBSbxIgAC/iYoEAIAAKIv8UCpQSb1FAUAABCcEsACL/hWL/QhJjACLAb1EDUEABYsBiwDTiwGL/SOL/tKL/0EAD4sBvUSLAA1BAAWLAYsA04mKAgAjiAB6KIv+UEkqUL1FAUAABCcEsACLAStQSYwAZEkWsIv/DUAADYAJRVJSOkxBVEVSsACLAIv/Z4mKAgCIAD+L/hUjSwEPI0sCTwJNIksCDyJPA08CTYv+TgJSKBNAAA2ACUVSUjpJTlZMRLAAi/6L/2eJigEAiAAFKYv/Z4kxACMpZUQSQAAOgApFUlI6VU5BVVRIsACJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}