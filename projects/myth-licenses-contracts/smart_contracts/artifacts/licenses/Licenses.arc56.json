{
    "name": "Licenses",
    "structs": {},
    "methods": [
        {
            "name": "add_product",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "change_date"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_use_grants",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "offset"
                },
                {
                    "type": "string",
                    "name": "payload"
                },
                {
                    "type": "bool",
                    "name": "final_chunk"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_change_date",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                },
                {
                    "type": "uint64",
                    "name": "next_change_date"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify_global",
            "args": [
                {
                    "type": "byte[]",
                    "name": "key"
                },
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 54,
                "bytes": 10
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "admin": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRtaW4="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "licenses": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "prefix": ""
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        407,
                        431,
                        453,
                        486
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        513
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        410,
                        434,
                        456,
                        489
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        698
                    ],
                    "errorMessage": "check self.admin exists"
                },
                {
                    "pc": [
                        602,
                        628
                    ],
                    "errorMessage": "check self.licenses entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmBAVhZG1pbgsgdXNlIGdyYW50cwwgY2hhbmdlIGRhdGUAMRhAAT4oMQBnggIJIFJFQURNRSAxX0NvbnRyYWN0IGhvbGRpbmcgYWRkaXRpb25hbCB1c2UgZ3JhbnRzIGFuZCBjaGFuZ2UgZGF0ZXMgZm9yIE15dGggRmluYW5jZSBCU0wgbGljZW5zZWQgcHJvZHVjdHMuZ4ICCSBSRUFETUUgMktTdG9yYWdlIGtleXMgYXJlIHByZWZpeGVkIHdpdGggdGhlIHByb2R1Y3QgbmFtZS4gVXNlIGdyYW50cyBpbiBib3ggc3RvcmFnZS5nggIJIFJFQURNRSAzZkNoYW5nZSBkYXRlcyBpbiBnbG9iYWwgc3RvcmFnZSBhcyBzZWNvbmRzIHNpbmNlIDE5NzAtMDEtMDEuIEZyb250ZW5kIHZpZXdlcjogaHR0cHM6Ly9ic2wubXl0aC5maW5hbmNlL2cxG0EAioIEBIi8mnsEFi4+eQRR2totBEEVHag2GgCOBABRADAAGgACI0MxGRREMRhENhoBVwIANhoCVwIAiAD/IkMxGRREMRhENhoBVwIANhoCF4gAwSJDMRkURDEYRDYaAVcCADYaAhc2GgNXAgA2GgQjU4gAUCJDMRkURDEYRDYaAVcCADYaAheIAA0iQzEZQP+UMRgURCJDigIAiACri/4pUEm9RQFBAA2ACUVSUjpFWElTVLAAi/4qUIv/Z4sASbxIK7+JigQAK4v8KVBJvUUBQAAOgApFUlI6TkVYSVNUsACL/hWL/QhJjACLAb1EDUEABYsBiwDTiwGL/SOL/tKL/0EAD4sBvUSLAA1BAAWLAYsA04mKAgCIAC6L/ipQSWRJFrCL/w1AAA2ACUVSUjpMQVRFUrAAiwCL/2eJigIAiAAGi/6L/2eJMQAjKGVEEkAADoAKRVJSOlVOQVVUSLAAiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}